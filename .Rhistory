for (c in condition_list) {
sample_list <- meta$sample[meta$condition == c]
temp <- prot_dat[,sample_list]
mean_list <- apply(temp, 1, mean)
sd_list <- apply(temp, 1, sd)
mean_sd <- cbind(mean_list,sd_list)
mean_coln <- paste('mean_',c)
sd_coln <- paste('sd_',c)
colnames(mean_sd) <- c(mean_coln,sd_coln)
prot_mean_sd <- cbind(prot_mean_sd,mean_sd)
}
rownames(prot_mean_sd) <- prot_mean_sd[,1]
prot_mean_sd <- prot_mean_sd[,-1]
return(prot_mean_sd)
}
prot_mean_sd_example <- data_calMean_calSD(prot_norm_example,meta_exam)
data_calMean_calSD <- function(prot_dat, meta){
rownames(meta) <- meta$sample
condition_list <- unique(meta[colnames(prot_dat),'condition'])
prot_mean_sd <- rownames(prot_dat)
for (c in condition_list) {
sample_list <- meta$sample[meta$condition == c]
temp <- prot_dat[,sample_list]
mean_list <- apply(temp, 1, mean)
sd_list <- apply(temp, 1, sd)
mean_sd <- cbind(mean_list,sd_list)
mean_coln <- paste('mean_',c)
sd_coln <- paste('sd_',c)
colnames(mean_sd) <- c(mean_coln,sd_coln)
prot_mean_sd <- cbind(prot_mean_sd,mean_sd)
}
rownames(prot_mean_sd) <- prot_mean_sd[,1]
prot_mean_sd <- prot_mean_sd[,-1]
return(prot_mean_sd)
}
prot_mean_sd_example <- data_calMean_calSD(prot_norm_example,meta_exam)
View(prot_mean_sd_example)
prot_mean_sd_example <- data_calMean_calSD(prot_norm_example[,c(1,6,11,2,7,12)],meta_exam)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- cbind(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
data_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta,4)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_calMean_calSD <- function(prot_dat, meta){
rownames(meta) <- meta$sample
condition_list <- unique(meta[colnames(prot_dat),'condition'])
prot_mean_sd <- as.numeric(rownames(prot_dat))
for (c in condition_list) {
sample_list <- meta$sample[meta$condition == c]
temp <- prot_dat[,sample_list]
mean_list <- apply(temp, 1, mean)
sd_list <- apply(temp, 1, sd)
mean_sd <- cbind(mean_list,sd_list)
mean_coln <- paste('mean_',c)
sd_coln <- paste('sd_',c)
colnames(mean_sd) <- c(mean_coln,sd_coln)
prot_mean_sd <- cbind(prot_mean_sd,mean_sd)
}
rownames(prot_mean_sd) <- prot_mean_sd[,1]
prot_mean_sd <- prot_mean_sd[,-1]
return(prot_mean_sd)
}
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- cbind(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
data_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_calsmoothcurve = function(x,ta,s0,df){
if (x > 0) {
y = x * ta / (x - (ta * s0))
y = -log10(2*(1-pt(y,df=df)))
return(y)
}
else if (x < 0) {
y = x * ta / (x + (ta * s0))
y = -log10(2*(1-pt(y,df=df)))
return(y)
}
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- cbind(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
data_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
data_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){smoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
library(ggplot2)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
pvalue <- t.test(prot_dat_1,prot_dat_2,paired = F)$p.value
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
prot_dat_1 <- prot_norm_example[,c(1,6,11)]
prot_dat_2 <- prot_norm_example[,c(2,7,12)]
t.test(prot_dat_1,prot_dat_2)
t.test(prot_dat_1,prot_dat_2)$p.value
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
pvalue <- apply(prot_dat_com, 1, t.test(prot_dat_1,prot_dat_2,paired = F)$p.value)
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .9,s0=.1)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .9,s0=.05)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .8,s0=.05)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .9,s0=.05)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')
#xlim(-1.3,1)+ylim(0,3.5)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .9,s0=.05)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,convince = .9,s0=.1)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, xleft=-5, xright=5, ydown=0, ytop=3, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')
xlim(xleft,xright)+ylim(ydown,ytop)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, xleft=-5, xright=5, ydown=0, ytop=3, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,1),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(-1.5,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(xleft,xright)+ylim(ydown,ytop)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,xleft = -1.5, xright = 1.5)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, xleft=-5, xright=5, ydown=0, ytop=3, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
print(str(prot_fudge))
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
#geom_text_repel(data_fudge4_1,mapping=aes(label=data_fudge4_1$`data_fasta$Protein`),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,xright),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(xleft,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(xleft,xright)+ylim(ydown,ytop)
return(p)
}
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,xleft = -1.5, xright = 1.5)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,xleft = -1.5, xright = 1.5)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(2,7,12)],meta_exam,4,xleft = -1.5, xright = 1.5,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(3,8,13)],meta_exam,4,xleft = -1.5, xright = 1.5,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(4,9,14)],meta_exam,4,xleft = -1.5, xright = 1.5,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(1,6,11)],prot_norm_example[,c(5,10,15)],meta_exam,4,xleft = -1.5, xright = 1.5,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(3,8,13)],meta_exam,4,xleft = -1.5, xright = 1.5,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(3,8,13)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(4,9,14)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(5,10,15)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, xleft=-5, xright=5, ydown=0, ytop=3, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
geom_text_repel(prot_fudge,mapping=aes(label=rownames(prot_fudge_sig)),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,xright),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(xleft,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(xleft,xright)+ylim(ydown,ytop)
return(p)
}
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(5,10,15)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
library(ggrepel)
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(5,10,15)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
data_volcano <- function(prot_dat_1, prot_dat_2, meta, df, xleft=-5, xright=5, ydown=0, ytop=3, convince=.95, s0=.01){
ta <- qt(convince,df)
prot_dat_com <- cbind(prot_dat_1,prot_dat_2)
colnum1 <- ncol(prot_dat_1)
colnum2 <- ncol(prot_dat_2)
pvalue <- apply(prot_dat_com, 1, function(x){t.test(x[1:colnum1],x[(colnum1 + 1):colnum2],paired = F)$p.value})
lgpvalue <- -log10(pvalue)
prot_mean_sd <- data_calMean_calSD(cbind(prot_dat_1,prot_dat_2),meta)
fc <- prot_mean_sd[,1] / prot_mean_sd[,3]
l2fc <- log2(fc)
prot_fudge <- data.frame(l2fc,lgpvalue)
colnames(prot_fudge) <- c('l2fc','lgpvalue')
rownames(prot_fudge) <- rownames(prot_dat_1)
prot_fudge$fudge <- apply(prot_fudge,1, function(x){data_calsmoothcurve(as.numeric(x[1]),ta,s0,df)})
prot_fudge$sig <- apply(prot_fudge,1,function(x){ifelse(((as.numeric(x[2]) > as.numeric(x[3])) & (abs(as.numeric(x[1]))>ta*s0)),'1','0')})
prot_fudge_sig <- subset(prot_fudge,sig=='1')
p <- ggplot(prot_fudge,aes(x=l2fc,y=lgpvalue,color=sig))+geom_point()+theme_bw()+
scale_color_manual(values = c('black','red'))+theme(legend.position = 'none',title = element_text(size=20),axis.text = element_text(size=16))+
xlab('Log2(Fold Change)')+ylab('-Log10(P-value)')+
geom_text_repel(prot_fudge_sig,mapping=aes(label=rownames(prot_fudge_sig)),vjust=1,size=5,color='red')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(.02,xright),linetype='dashed',n=10000,size=2,alpha=.3,color='darkred')+
geom_function(fun=function(x){data_calsmoothcurve(x,ta,s0,df)},xlim=c(xleft,-.02),size=2,alpha=.3,color='darkgreen',n=10000,linetype='dashed')+
xlim(xleft,xright)+ylim(ydown,ytop)
return(p)
}
data_volcano(prot_norm_example[,c(2,7,12)],prot_norm_example[,c(5,10,15)],meta_exam,4,xleft = -2, xright = 2,convince = .9,s0=.02)
View(prot_dat_1)
View(prot_dat_example)
View(prot_mean_sd_example)
prot_mean_sd_example <- data_calMean_calSD(prot_norm_example,meta_exam)
colnames(meta_exam) <- c('sample','condition','repeat','reference','set','channel')
usethis::use_data(meta_exam,prot_mean_sd_example)
usethis::use_data(meta_exam,prot_mean_sd_example,overwrite = TRUE)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
prot_dat_exam
load("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl/.RData")
prot_dat_example
library(MSAnalysisTMTcyl)
prot_dat_example
melt(prot_dat_example[1:15])
reshape2::melt(prot_dat_example[1:15])
View(reshape2::melt(prot_dat_example[1:15]))
prot_dat_example <- cbind(rownames(prot_dat_example),prot_dat_example)
View(reshape2::melt(prot_dat_example[1:15]))
id = 33
p <- ggplot(prot_dat_specific[prot_dat_specific[,1]==id,],aes(x=condition,y=value))+geom_point(size=2)+
theme_bw()+theme(axis.title = element_text(size=20),axis.text = element_text(size=18,angle = 60,hjust = 1),title = element_text(size=22))+
xlab('')+ylab('Relative Intensity')+ggtitle(id)
library(ggplot2)
p <- ggplot(prot_dat_specific[prot_dat_specific[,1]==id,],aes(x=condition,y=value))+geom_point(size=2)+
theme_bw()+theme(axis.title = element_text(size=20),axis.text = element_text(size=18,angle = 60,hjust = 1),title = element_text(size=22))+
xlab('')+ylab('Relative Intensity')+ggtitle(id)
library(MSAnalysisTMTcyl)
prot_dat_specific_exam <- data_transform_melt(prot_dat_example[1:15],meta)
library(MSAnalysisTMTcyl)
prot_dat_specific_exam <- data_transform_melt(prot_dat_example[1:15],meta)
devtools::document()
library(MSAnalysisTMTcyl)
prot_dat_specific_exam <- data_transform_melt(prot_dat_example[1:15],meta)
prot_dat_specific_exam <- data_transform_melt(prot_dat_example[1:15],meta_exam)
prot_dat_specific_exam <- data_transform_melt(prot_norm_example[1:15],meta_exam)
View(prot_dat_specific_exam)
data_plot_specific(prot_dat_specific_exam, 33)
usethis::use_data(prot_dat_specific_exam)
View(prot_dat_specific_exam)
colnames(prot_dat_specific_exam) <- c('id','variable','value','condition')
View(prot_dat_specific_exam)
devtools::document()
devtools::document()
usethis::use_data(prot_dat_specific_exam)
usethis::use_data(prot_dat_specific_exam,overwrite = TRUE)
devtools::document()
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.1.tar.gz", repos = NULL, type = "source")
remove.packages("MSAnalysisTMTcyl", lib="~/R/win-library/4.0")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.1.tar.gz", repos = NULL, type = "source")
remove.packages("MSAnalysisTMTcyl", lib="~/R/win-library/4.0")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.2.tar.gz", repos = NULL, type = "source")
remove.packages("MSAnalysisTMTcyl", lib="~/R/win-library/4.0")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.2.tar.gz", repos = NULL, type = "source")
devtools::document()
remove.packages("MSAnalysisTMTcyl", lib="~/R/win-library/4.0")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.3.tar.gz", repos = NULL, type = "source")
devtools::document()
remove.packages("MSAnalysisTMTcyl", lib="~/R/win-library/4.0")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.4.tar.gz", repos = NULL, type = "source")
install.packages("D:/YulinChen/ZJU LSI/Lin Lab/R_Packages/MSAnalysisTMTcyl_0.1.4.tar.gz", repos = NULL, type = "source")
